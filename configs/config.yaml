grpc:
  port: 8088
  development: true

probes:
  readinessPath: /ready
  livenessPath: /live
  port: :3001
  pprof: :6001
  prometheusPath: /metrics
  prometheusPort: 8001
  checkIntervalSeconds: 10

postgres:
  host: localhost
  port: 5432
  username: root
  password: mysecurepassword
  dbname: shop
  sslmode: disable
  timezone: "utc"
  maxIdleConns: 10
  maxOpenConns: 100
  connMaxLifetime: 3600
  init_milliseconds: 1500
  init_retry_count: 3

migrations:
  enable: true
  recreate: false
  source_url: "file://migrations"
  db_url: "postgres://root:mysecurepassword@localhost:5432/shop?sslmode=disable"

redis: 
  host: localhost 
  port: 6380 
  password: "" 
  database: 0

mongo:
  uri: "mongodb://localhost:27017"
  user: admin
  password: admin
  db: shop
mongo_collections:
  shop: orders
  
log:
  log_level: debug
  file_log_name: "./storages/logs/dev.001.log"
  max_size: 500
  max_backups: 3
  max_age: 28
  compress: true

server:
  port: 8080
  mode: "dev"
  debug: true

jaeger:
  enable: true
  service_name: es_service
  host_port: "localhost:6831"
  log_spans: false

event_store:
  connection_string: "esdb://localhost:2113?tls=false"

elastic_search:
  url: "http://localhost:9200"
  sniff: false
  gzip: true
  explain: true
  fetch_source: true
  version: true
  pretty: true

elastic_indexes:
  orders: "orders"

service_name: es_service

kafka: 
  brokers: "localhost:9093"
  group_id: order_microservice_consumer
  init_topics: true

kafka_topics:
  event_created:
    topic_name: event_created
    partitions: 10
    replication_factor: 1

kafka_publisher:
  topic: event_created
  topic_prefix: eventstore
  partitions: 10
  replication_factor: 1